@mixin removeMB {
	& > :last-child {
		margin-bottom: 0;
	}
}
@mixin removeMR {
	& > :last-child {
		margin-right: 0;
	}
}
@mixin center {
	position: absolute;
	top: 50%;
	left: 50%;
	transform: translate(-50%, -50%);
}
@mixin castomScrol {
	&::-webkit-scrollbar {
		height: calc($base * 0.4) !important;
		width: calc($base * 0.4) !important;
	}
	&::-webkit-scrollbar-track {
		background: $lightPrimaryColor;
		border-radius: $sizeXS;
	}
	&::-webkit-scrollbar-thumb {
		background: $primaryColor;
		border-radius: $sizeXS;
	}
}
@mixin castomRange {
	& {
		height: $sizeXS;
		background-color: $lightPrimaryColor;
		border: calc($base * 0.2) solid $primaryColor;
		border-radius: $sizeXS;
		cursor: e-resize;
		-webkit-appearance: none;
	}
	&::-webkit-slider-thumb {
		@include size(15, 15);
		background-color: $primaryColor;
		border-radius: 50%;
		-webkit-appearance: none;
	}
}
@mixin flex($align-items: center, $justify-content: center, $flex-direction: row, $flex-wrap: nowrap) {
	display: flex;
	align-items: $align-items;
	justify-content: $justify-content;
	flex-direction: $flex-direction;
	flex-wrap: $flex-wrap;
}
@mixin size($width, $heigth, $breackpoint: 0, $lastWidth: $width, $lastHeigth: $heigth) {
	@media screen and (min-width: calc($breackpointSMMin * 1px)) {
		width: calc($width * 1px);
		height: calc($heigth * 1px);
	}
	@if $breackpoint != 0 {
		@media screen and (max-width: calc($breackpoint * 1px)) {
			width: calc(
				($lastWidth * 1px) + ($width - $lastWidth) * ((100vw - ($breackpointXSMax * 1px)) / ($breackpoint - $breackpointXSMax))
			);
			height: calc(
				($lastHeigth * 1px) + ($heigth - $lastHeigth) * ((100vw - $breackpointXSMax * 1px) / ($breackpoint - $breackpointXSMax))
			);
		}
	}
	@media screen and (max-width: calc($breackpointXSMax * 1px)) {
		width: calc(0px + $lastWidth * (100vw / $breackpointXSMax));
		height: calc(0px + $lastHeigth * (100vw / $breackpointXSMax));
	}
}