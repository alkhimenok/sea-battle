$transparent: transparent;

$defaultColor: #000000;
$errorColor: #d04840;
$primaryColor: #256696;
$secondaryColor: #ffffff;
$lightPrimaryColor: #a8c6db;
$transparentPrimaryColor: #a8c6db30;
$lightSecondaryColor: #fafafa;

$delay: 0.2s;
$longDelay: 0.4s ease-in-out;

$maxWidth: 800px;

$base: 1rem;

$sizeXS: $base * 1;
$sizeSM: $base * 1.5;
$sizeMD: $base * 2;
$sizeLG: $base * 3;
$sizeXL: $base * 4;
$sizeXXL: $base * 5;

$breackpointXSMin: 0;
$breackpointXSMax: 576;
$breackpointSMMin: $breackpointXSMax + 1; // 577
$breackpointSMMax: 768;
$breackpointMDMin: $breackpointSMMax + 1; // 769
$breackpointMDMax: 992;
$breackpointLGMin: $breackpointMDMax + 1; // 993
$breackpointLGMax: 1200;
$breackpointXLMin: $breackpointLGMax + 1; // 1201
$breackpointXLMax: 1400;
$breackpointXXLMin: $breackpointXLMax + 1; // 1401

@mixin removeMB {
	& > :last-child {
		margin-bottom: 0;
	}
}
@mixin removeMR {
	& > :last-child {
		margin-right: 0;
	}
}
@mixin center {
	position: absolute;
	top: 50%;
	left: 50%;
	transform: translate(-50%, -50%);
}
@mixin castomScrol {
	&::-webkit-scrollbar {
		height: calc($base * 0.4) !important;
		width: calc($base * 0.4) !important;
	}
	&::-webkit-scrollbar-track {
		background: $lightPrimaryColor;
		border-radius: $sizeXS;
	}
	&::-webkit-scrollbar-thumb {
		background: $primaryColor;
		border-radius: $sizeXS;
	}
}
@mixin castomRange {
	& {
		height: $sizeXS;
		background-color: $lightPrimaryColor;
		border: calc($base * 0.2) solid $primaryColor;
		border-radius: $sizeXS;
		cursor: e-resize;
		-webkit-appearance: none;
	}
	&::-webkit-slider-thumb {
		@include size(15, 15);
		background-color: $primaryColor;
		border-radius: 50%;
		-webkit-appearance: none;
	}
}
@mixin flex($align-items: center, $justify-content: center, $flex-direction: row, $flex-wrap: nowrap) {
	display: flex;
	align-items: $align-items;
	justify-content: $justify-content;
	flex-direction: $flex-direction;
	flex-wrap: $flex-wrap;
}
@mixin size($width, $heigth, $breackpoint: 0, $lastWidth: $width, $lastHeigth: $heigth) {
	@media screen and (min-width: calc($breackpointSMMin * 1px)) {
		width: calc($width * 1px);
		height: calc($heigth * 1px);
	}
	@if $breackpoint != 0 {
		@media screen and (max-width: calc($breackpoint * 1px)) {
			width: calc(
				($lastWidth * 1px) + ($width - $lastWidth) * ((100vw - ($breackpointXSMax * 1px)) / ($breackpoint - $breackpointXSMax))
			);
			height: calc(
				($lastHeigth * 1px) + ($heigth - $lastHeigth) * ((100vw - $breackpointXSMax * 1px) / ($breackpoint - $breackpointXSMax))
			);
		}
	}
	@media screen and (max-width: calc($breackpointXSMax * 1px)) {
		width: calc(0px + $lastWidth * (100vw / $breackpointXSMax));
		height: calc(0px + $lastHeigth * (100vw / $breackpointXSMax));
	}
}

// ----- fonts //
@import './fonts';
// fonts ----- //

// ----- icons //
@import './icons';
// icons ----- //

// ----- reset //
@import './reset';
// reset ----- //

// ----- cammon //
@import './cammon'; 
// cammon ----- //

// ----- nav //
@import './components/nav';
// nav ----- //

// ----- card //
@import './components/card'; 
// card ----- //

// ----- field //
@import './components/field';
// field ----- //

// ----- ships //
@import './components/ships';
// ships ----- //

// ----- start //
@import './sections/start';
// start ----- //

// ----- stats //
@import './sections/stats';
// stats ----- //

// ----- size //
@import './sections/size';
// size ----- //

// ----- position //
@import './sections/position'; 
// position ----- //

// ----- battle //
@import './sections/battle';
// battle ----- //
